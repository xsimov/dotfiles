source ~/dotfiles/vim/plugins.vim

set number
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=4
set mouse=a
set backspace=2
colorscheme angr

set ignorecase
set smartcase

let g:ctrlp_show_hidden = 1
if executable('ag')
  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

let test#ruby#rspec#executable = 'bundle exec rspec'
let g:test#preserve_screen = 1
let test#strategy = {
      \ "suite": "tslime",
      \ "file": "tslime",
      \ "nearest": "vtr",
      \ "last": "vtr",
      \ }
map <Leader>t :TestFile<CR>
map <Leader>s :TestNearest<CR>
map <Leader>l :TestLast<CR>
map <Leader>a :TestSuite<CR>
map <Leader>q :vsp .<CR>
map <Leader>0 ^i
map <Leader>f :echo @%<CR>

nmap <leader>- :sp<CR><C-p>
nmap <leader>\ :vsp<CR><C-p>
nmap <Leader>D Orequire 'pry';binding.pry<Esc>

imap jk <Esc>:w<CR>
imap kj <Esc>:w<CR>
imap <leader>o <C-o>o
imap <leader>O <C-o>O
imap <Leader>D require 'pry';binding.pry<Esc>

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

autocmd!
au CursorHoldI <buffer> stopinsert
au FocusLost,BufLeave * wa
syntax on

highlight OverLength ctermbg=red ctermfg=white guibg=#592929
highlight TrailingSpaces ctermbg=red ctermfg=white guibg=#592929

match TrailingSpaces /\s\+$/

function ForceHighlightingTrailingSpaces()
  match TrailingSpaces /\s\+$/
endfunction

function ShowOver80Chars()
  match OverLength /\%81v.\+/
endfunction

function HideOver80Chars()
  match OverLength //
endfunction

func GitGrep(...)
  let save = &grepprg
  set grepprg=git\ grep\ -n\ $*
  let s = 'grep'
  for i in a:000
    let s = s . ' ' . i
  endfor
  exe s
  let &grepprg = save
endfun
command -nargs=? G call GitGrep(<f-args>):tabe copen<CR>
