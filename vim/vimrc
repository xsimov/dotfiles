source ~/dotfiles/vim/plugins.vim

autocmd ColorScheme * highlight TrailingSpaces ctermbg=red guibg=#592929 ctermfg=white

set number
set nornu
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=4
set mouse=a
set backspace=2
set splitright
set gcr=a:blinkon0
set guifont=Monaco:h15
colorscheme angr

set ignorecase
set smartcase

set directory^=$HOME/.vim/tmp//

let g:ctrlp_show_hidden = 1
if executable('ag')
  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

let g:user_emmet_mode='a'

let test#ruby#rspec#executable = 'bundle exec rspec'
let test#ruby#minitest#executable = 'COVERAGE=1 bundle exec rake test'
let g:test#preserve_screen = 1
let test#strategy = {
      \ "suite": "tslime",
      \ "file": "tslime",
      \ "nearest": "tslime",
      \ "last": "tslime",
      \ }

let g:markdown_fenced_languages = ['html', 'python', 'bash=sh', 'ruby', 'go']
let g:go_fmt_command = 'goimports'

map <Leader>t :w<CR>:TestFile<CR>
map <Leader>s :w<CR>:TestNearest<CR>
map <Leader>l :w<CR>:TestLast<CR>
map <Leader>a :w<CR>:TestSuite<CR>

" with COVERAGE flag (companies)
map <Leader>T :w<CR>:TestFile<CR>
map <Leader>S :w<CR>:TestNearest<CR>
map <Leader>L :w<CR>:TestLast<CR>
map <Leader>A :w<CR>:TestSuite<CR>

map <Leader>q :vsp .<CR>
map <Leader>f :echo @%<CR>
map <Leader>* :G <cword><CR>
map <Leader>S :Gstatus<CR>

nmap <leader>w :cw<CR>
nmap <leader>] :cn<CR>
nmap <leader>[ :cp<CR>
nmap <leader>- :sp<CR><C-p>
nmap <leader>\ :vsp<CR><C-p>
nmap <Leader>D Orequire 'pry';binding.pry<Esc>

imap jk <Esc>
imap kj <Esc>
imap <Leader>D require 'pry';binding.pry<Esc>

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

autocmd!
au CursorHoldI <buffer> stopinsert
au FocusLost,BufLeave * wa
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
syntax on

highlight OverLength ctermbg=red ctermfg=white guibg=#592929
highlight TrailingSpaces ctermbg=red ctermfg=white guibg=#592929

match TrailingSpaces /\s\+$/

function ForceHighlightingTrailingSpaces()
  match TrailingSpaces /\s\+$/
endfunction

function ShowOver80Chars()
  match OverLength /\%81v.\+/
endfunction

function HideOver80Chars()
  match OverLength //
endfunction

func GitGrep(...)
  let save = &grepprg
  set grepprg=git\ grep\ -n\ $*
  let s = 'grep'
  for i in a:000
    let s = s . ' ' . i
  endfor
  exe s
  let &grepprg = save
endfun
command -nargs=? G call GitGrep(<f-args>):tabe copen<CR>
